/// \file DQMModule.cc
/*
 *
 * DQMModule.cc source template automatically generated by a class generator
 * Creation date : ven. sept. 5 2014
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */

// -- dqm4hep headers
#include "dqm4hep/Module.h"
#include "dqm4hep/ModuleApplication.h"

namespace dqm4hep {

  namespace core {

    Module::Module() :
        m_name( "" ),
        m_pModuleApplication(NULL)
    {
      /* nop */
    }

    //-------------------------------------------------------------------------------------------------

    Module::~Module()
    {
      /* nop */
    }

    //-------------------------------------------------------------------------------------------------

    void Module::setName( const std::string &name )
    {
      m_name = name;
    }

    //-------------------------------------------------------------------------------------------------

    const std::string &Module::getName() const
    {
      return m_name;
    }

    //-------------------------------------------------------------------------------------------------

    const std::string &Module::getDetectorName() const
    {
      return m_detectorName;
    }

    //-------------------------------------------------------------------------------------------------

    void Module::setDetectorName( const std::string &detectorName )
    {
      m_detectorName = detectorName;
    }

    //-------------------------------------------------------------------------------------------------

    const Version &Module::getVersion() const
    {
      return m_version;
    }

    //-------------------------------------------------------------------------------------------------

    void Module::setVersion(unsigned int major, unsigned int minor, unsigned int patch)
    {
      m_version.set(major, minor, patch);
    }

    //-------------------------------------------------------------------------------------------------

    ModuleApplication *Module::getModuleApplication() const
    {
      return m_pModuleApplication;
    }

    //-------------------------------------------------------------------------------------------------

    void Module::setModuleApplication(ModuleApplication *pModuleApplication)
    {
      m_pModuleApplication = pModuleApplication;
    }

  }

}

