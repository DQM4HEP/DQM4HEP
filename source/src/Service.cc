/// \file Service.cc
/*
 *
 * Service.cc source template automatically generated by a class generator
 * Creation date : sam. dï¿½c. 3 2016
 *
 * This file is part of DQM4HEP libraries.
 *
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 *
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */

// -- dqm4hep headers
#include "dqm4hep/Service.h"

namespace dqm4hep {

  namespace net {

    Service::Service(Server *pServer, const std::string &name) :
      m_pService(nullptr),
      m_name(name),
      m_pServer(pServer),
      m_charContent((char*)m_content.c_str())
    {
      /* nop */
    }

    Service::~Service()
    {
      this->disconnectService();
    }

    const std::string &Service::name() const
    {
      return m_name;
    }

    Server *Service::server() const
    {
      return m_pServer;
    }

    void Service::connectService()
    {
      if(!this->isServiceConnected())
      {
        m_content.clear();
        m_charContent = (char*)m_content.c_str();
        m_pService = new DimService((char*)m_name.c_str(), "C", (char*)m_charContent, m_content.size());
      }
    }

    void Service::disconnectService()
    {
      if(this->isServiceConnected())
      {
        delete m_pService;
        m_pService = nullptr;
      }
    }

    bool Service::isServiceConnected() const
    {
      return (m_pService != nullptr);
    }

  }

}
