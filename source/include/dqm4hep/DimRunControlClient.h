/// \file DQMDimRunControlClient.h
/*
 *
 * DQMDimRunControlClient.h header template automatically generated by a class generator
 * Creation date : mer. nov. 12 2014
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef DQM4HEP_DIMRUNCONTROLCLIENT_H
#define DQM4HEP_DIMRUNCONTROLCLIENT_H

// -- dqm4hep headers
#include "dqm4hep/DQM4HEP.h"
#include "dqm4hep/RunControlClient.h"

// -- xdrstream headers
#include "xdrstream/xdrstream.h"

// -- dim headers
#include "dic.hxx"

namespace dqm4hep {

  namespace core {

    class DimRunControlClient;

    //-------------------------------------------------------------------------------------------------
    //-------------------------------------------------------------------------------------------------

    class CurrentRunRpcInfo : public DimRpcInfo
    {
    public:
      /** Constructor
       */
      CurrentRunRpcInfo(char *rpcName, DimRunControlClient *pClient);

    private:
      /** Dim rpc info handler
       */
      void rpcInfoHandler();

    private:
      DimRunControlClient         *m_pClient;
    };

    //-------------------------------------------------------------------------------------------------
    //-------------------------------------------------------------------------------------------------

    /** RunControlClient class
     */
    class DimRunControlClient : public DimClient, public RunControlClient
    {
    public:
      /** Constructor
       */
      DimRunControlClient();

      /** Destructor
       */
      ~DimRunControlClient();

      /** Connect to the service.
       */
      StatusCode connectToService();

      /** Disconnect from the service
       */
      StatusCode disconnectFromService();

      /** Whether the client is connected to the service
       */
      bool isConnectedToService() const;

      /** Create a new run from a Run
       *  The run control is the owner the run
       */
      StatusCode sendStartNewRun(Run *pRun, const std::string &password = "");

      /** Create a new run.
       *  End the current run if running
       */
      StatusCode sendStartNewRun(int runNumber, const std::string &description = "", const std::string &detectorName = "", const std::string &password = "");

      /** End the current run
       */
      StatusCode sendEndCurrentRun( const std::string &password = "" );

    private:
      /** Dim info handler
       */
      void infoHandler();

    private:
      /** Handle the dim current run rpc info
       */
      void handleCurrentRunRpcInfo(DimRpcInfo *pRpcInfo);

      /** Configure the xdrstream buffer with the input socket buffer
       */
      void configureInBuffer( char *pBuffer , uint32_t bufferSize );

    private:
      bool                     m_isConnected;          ///< Whether the client is connected to the server instance
      xdrstream::BufferDevice *m_pInBuffer;            ///< The xdr buffer to deserialize the run at start of run
      xdrstream::BufferDevice *m_pOutBuffer;           ///< The xdr buffer to serialize data

      DimInfo                 *m_pStartOfRunInfo;      ///< The dim start of run info
      DimInfo                 *m_pEndOfRunInfo;        ///< The dim end of run info
      DimRpcInfo              *m_pCurrentRunRpcInfo;   ///< The dim current run rpc info
      DimRpcInfo              *m_pStartNewRunRpcInfo;  ///< The dim start new run rpc info
      DimRpcInfo              *m_pEndRunRpcInfo;       ///< The dim end current run rpc info

      friend class CurrentRunRpcInfo;
      friend class StartNewRunRpcInfo;
      friend class EndCurrentRunRpcInfo;
    };

  }

} 

#endif  //  DQM4HEP_RUNCONTROLCLIENT_H
