/// \file DQMShmProcessor.h
/*
 *
 * DQMShmProcessor.h header template automatically generated by a class generator
 * Creation date : mer. avr. 13 2016
 *
 * This file is part of DQMEvb libraries.
 * 
 * DQMEvb is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQMEvb is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQMEvb.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef DQM4HEP_SHMPROCESSOR_H
#define DQM4HEP_SHMPROCESSOR_H

// -- dqm4hep headers
#include "dqm4hep/DQM4HEP.h"
#include "dqm4hep/DQMXmlHelper.h"

// -- levbdim headers
#include "buffer.hh"

namespace dqm4hep {

  namespace core {

    class Event;
    class Run;
    class TiXmlHandle;

    /** ShmProcessor class
     */
    class ShmProcessor
    {
    public:
      /** Destructor
       */
      virtual ~ShmProcessor() {}

      /** Call back function on start of run
       */
      virtual StatusCode startOfRun(Run *const pRun) = 0;

      /** Call back function on end of run
       */
      virtual StatusCode endOfRun(const Run *const pRun) = 0;

      /** Called when an event is reconstructed.
       *  The key is a unique identifier for the event.
       *  The buffer list is the reconstructed list of buffers for the target key
       *  of the different sources
       */
      virtual StatusCode processEvent(Event *pEvent, uint32_t key, const std::vector<levbdim::buffer*> &bufferList) = 0;

      /** Read settings from xml handle
       */
      virtual StatusCode readSettings(const TiXmlHandle xmlHandle) = 0;
    };

  }

} 

#endif  //  DQM4HEP_SHMPROCESSOR_H
