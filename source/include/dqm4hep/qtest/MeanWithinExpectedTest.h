/// \file DQMQualityTest.h
/*
 *
 * DQMQualityTest.h header template automatically generated by a class generator
 * Creation date : ven. fï¿½vr. 20 2015
 *
 * This file is part of DQM4HEP libraries.
 *
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 *
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef DQM4HEP_QUALITYTEST_H
#define DQM4HEP_QUALITYTEST_H

// -- dqm4hep headers
#include "dqm4hep/DQM4HEP.h"
#include "dqm4hep/QualityTest.h"

namespace dqm4hep {

  namespace core {

    /** MeanWithinExpectedTest class
     */
    class MeanWithinExpectedTest : public QualityTest
    {
    public:
      /** Factory class
       */
      class Factory : public QualityTestFactory
      {
      public:
        /** Create a quality test
         */
        QualityTest *createQualityTest(const std::string &name) const;
      };

      /** Constructor with name
       */
      MeanWithinExpectedTest(const std::string &name);

      /** Destructor
       */
      ~MeanWithinExpectedTest();

      /** Read the settings from the xml handle
       */
      StatusCode readSettings(const dqm4hep::core::TiXmlHandle xmlHandle);

      /** Initialize the quality test.
       */
      StatusCode init();

      /** Runs a quality test on the given monitor element
       */
      StatusCode userRun(MonitorElement *pMonitorElement, QualityTestReport &report);

      /** Whether the quality test can be run on the monitor element
       */
      bool canRun(MonitorElement *pMonitorElement) const;

    protected:
      float               m_expectedMean;
      float               m_meanDeviationLower;
      float               m_meanDeviationUpper;
    };

    //-------------------------------------------------------------------------------------------------
    //-------------------------------------------------------------------------------------------------

    inline QualityTest *MeanWithinExpectedTest::Factory::createQualityTest(const std::string &name) const
    {
      return new MeanWithinExpectedTest(name);
    }

  }

}

#endif  //  DQM4HEP_QUALITYTEST_H
