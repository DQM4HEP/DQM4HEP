/// \file DQMAnalysisModule.h
/*
 *
 * DQMAnalysisModule.h header template automatically generated by a class generator
 * Creation date : mar. aoï¿½t 18 2015
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef DQM4HEP_ANALYSISMODULE_H
#define DQM4HEP_ANALYSISMODULE_H

// -- dqm4hep headers
#include "dqm4hep/DQM4HEP.h"
#include "dqm4hep/DQMModule.h"

namespace dqm4hep {

  namespace core {

    class Event;
    class Run;

    /** AnalysisModule class
     */
    class AnalysisModule : public Module
    {
      friend class AnalysisModuleApplication;

    public:
      /** Constructor
       */
      AnalysisModule();

      /** Destructor
       */
      virtual ~AnalysisModule() {}

      /** Process an event.
       *
       *  Fill histograms in this method
       */
      virtual StatusCode processEvent(const Event *const pEvent) = 0;

      /** Called at start of run
       */
      virtual StatusCode startOfRun(const Run *const pRun) = 0;

      /** Called at end of run
       */
      virtual StatusCode endOfRun(const Run *const pRun) = 0;
    };

    //-------------------------------------------------------------------------------------------------
    //-------------------------------------------------------------------------------------------------

    inline AnalysisModule::AnalysisModule() :
        Module()
    {
    }

  }

} 

#endif  //  DQM4HEP_ANALYSISMODULE_H
