##############################################################################
# cmake configuration file for DQMCore
#
# requires:
#   MacroCheckPackageLibs.cmake for checking package libraries
#   MacroExportPackageDeps.cmake for exporting package dependencies
#
# returns following variables:
#
#   DQMCore_FOUND      : set to TRUE if DQMCore found
#       if FIND_PACKAGE called with REQUIRED and COMPONENTS arguments
#       DQMCore_FOUND is only set to TRUE if ALL components are also found
#       if REQUIRED is NOT set components may or may not be available
#
#   DQMCore_ROOT       : path to this DQMCore installation
#   DQMCore_VERSION    : package version
#   DQMCore_LIBRARIES  : list of DQMCore libraries (NOT including COMPONENTS)
#   DQMCore_INCLUDE_DIRS  : list of paths to be used with INCLUDE_DIRECTORIES
#   DQMCore_LIBRARY_DIRS  : list of paths to be used with LINK_DIRECTORIES
#   DQMCore_COMPONENT_LIBRARIES      : list of DQMCore component libraries
#   DQMCore_${COMPONENT}_FOUND       : set to TRUE or FALSE for each library
#   DQMCore_${COMPONENT}_LIBRARY     : path to individual libraries
#   DQMCore_${COMPONENT}_LIB_DEPENDS : individual library dependencies
#
# @author Jan Engels, Desy
# Modified for DQMCore use by : Remi Ete, IPNL
##############################################################################

SET( DQMCore_ROOT "@CMAKE_INSTALL_PREFIX@" )
SET( DQMCore_VERSION "@DQMCore_VERSION@" )


# ---------- include dirs -----------------------------------------------------
# do not store find results in cache
SET( DQMCore_INCLUDE_DIRS DQMCore_INCLUDE_DIRS-NOTFOUND )
MARK_AS_ADVANCED( DQMCore_INCLUDE_DIRS )

FIND_PATH( DQMCore_INCLUDE_DIRS
	NAMES DQMCoreConfig.h
	PATHS @CMAKE_INSTALL_PREFIX@/include/
	NO_DEFAULT_PATH
)



# ---------- libraries --------------------------------------------------------
INCLUDE( "@DQM4HEP_CMAKE_MODULES_ROOT@/MacroCheckPackageLibs.cmake" )

# only standard libraries should be passed as arguments to CHECK_PACKAGE_LIBS
# additional components are set by cmake in variable PKG_FIND_COMPONENTS
# first argument should be the package name
CHECK_PACKAGE_LIBS( DQMCore DQMCore )


# ---------- dependencies -----------------------------------------------------
INCLUDE( "@DQM4HEP_CMAKE_MODULES_ROOT@/MacroExportPackageDeps.cmake" )
# exports following package dependencies (if set)
# first argument of macro should be the package name
SET( DQMCore_DEPENDS_INCLUDE_DIRS  @DQMCore_DEPENDS_INCLUDE_DIRS@ )
SET( DQMCore_DEPENDS_LIBRARY_DIRS  @DQMCore_DEPENDS_LIBRARY_DIRS@ )
SET( DQMCore_DEPENDS_LIBRARIES  @DQMCore_DEPENDS_LIBRARIES@ )
EXPORT_PACKAGE_DEPENDENCIES( DQMCore )



# ---------- final checking ---------------------------------------------------
INCLUDE( FindPackageHandleStandardArgs )
# set DQMCore_FOUND to TRUE if all listed variables are TRUE and not empty
# DQMCore_COMPONENT_VARIABLES will be set if FIND_PACKAGE is called with REQUIRED argument
FIND_PACKAGE_HANDLE_STANDARD_ARGS( DQMCore DEFAULT_MSG DQMCore_ROOT DQMCore_INCLUDE_DIRS DQMCore_LIBRARIES ${DQMCore_COMPONENT_VARIABLES} )

SET( DQMCore_FOUND ${DQMCore_FOUND} )



# ---------- definitions ------------------------------------------------------
IF( DQMCore_FOUND )

    IF( CMAKE_BUILD_TYPE STREQUAL "Debug" OR
        CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo" )
        MARK_AS_ADVANCED( DQMCore_DEFINITIONS )
    ENDIF()

ENDIF()
